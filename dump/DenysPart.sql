--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.4
-- Dumped by pg_dump version 9.6.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: HappyCake_main; Type: SCHEMA; Schema: -; Owner: wolterlw
--

CREATE SCHEMA "HappyCake_main";


ALTER SCHEMA "HappyCake_main" OWNER TO wolterlw;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = "HappyCake_main", pg_catalog;

--
-- Name: incrfuncion(); Type: FUNCTION; Schema: HappyCake_main; Owner: wolterlw
--

CREATE FUNCTION incrfuncion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
 BEGIN
   --New."Id_counteragent":=nextval('"HappyCake_main"."CounterAgents_Id_counteragent_seq"');
   --Return NEW;
   INSERT INTO "HappyCake_main"."CounterAgents" VALUES (DEFAULT);
   RETURN NEW;
 END;
 $$;


ALTER FUNCTION "HappyCake_main".incrfuncion() OWNER TO wolterlw;

--
-- Name: incrfunction(); Type: FUNCTION; Schema: HappyCake_main; Owner: wolterlw
--

CREATE FUNCTION incrfunction() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
id_counteragent integer;
BEGIN
SELECT nextval('"HappyCake_main"."CounterAgents_Id_counteragent_seq"') INTO id_counteragent;
INSERT INTO "CounterAgents" VALUES (id_counteragent);
NEW."Id_counteragent" := id_counteragent;
RETURN NEW;
END;
$$;


ALTER FUNCTION "HappyCake_main".incrfunction() OWNER TO wolterlw;

--
-- Name: maxcount(); Type: FUNCTION; Schema: HappyCake_main; Owner: wolterlw
--

CREATE FUNCTION maxcount() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
maximum INTEGER :=0;
BEGIN
INSERT INTO "HappyCake_main"."CounterAgents" ("Id_counteragent")
VALUES (DEFAULT)
RETURNING "Id_counteragent" INTO maximum;
return maximum;
END;
$$;


ALTER FUNCTION "HappyCake_main".maxcount() OWNER TO wolterlw;

SET search_path = public, pg_catalog;

--
-- Name: incrfuncion(); Type: FUNCTION; Schema: public; Owner: wolterlw
--

CREATE FUNCTION incrfuncion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
 BEGIN
   --New."Id_counteragent":=nextval('"HappyCake_main"."CounterAgents_Id_counteragent_seq"');
   --Return NEW;
   INSERT INTO "HappyCake_main"."CounterAgents" VALUES (DEFAULT);
 END;
 $$;


ALTER FUNCTION public.incrfuncion() OWNER TO wolterlw;

--
-- Name: maxcount(); Type: FUNCTION; Schema: public; Owner: wolterlw
--

CREATE FUNCTION maxcount() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
maximum INTEGER :=0;
BEGIN
SELECT nextval('"HappyCake_main"."CounterAgents_Id_counteragent_seq"') INTO maximum FROM "HappyCake_main"."CounterAgents" ;
return maximum;
END;
$$;


ALTER FUNCTION public.maxcount() OWNER TO wolterlw;

SET search_path = "HappyCake_main", pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: CorporateFace; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "CorporateFace" (
    company_name character(25) NOT NULL,
    identification_code integer NOT NULL,
    telefon_number integer NOT NULL,
    adress character(20) NOT NULL,
    "Id_counteragent" integer NOT NULL
);


ALTER TABLE "CorporateFace" OWNER TO wolterlw;

--
-- Name: CounterAgents_Id_counteragent_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "CounterAgents_Id_counteragent_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "CounterAgents_Id_counteragent_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "CounterAgents_Id_counteragent_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "CounterAgents_Id_counteragent_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: CounterAgents; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "CounterAgents" (
    "Id_counteragent" integer DEFAULT nextval('"CounterAgents_Id_counteragent_seq"'::regclass) NOT NULL
);


ALTER TABLE "CounterAgents" OWNER TO wolterlw;

--
-- Name: Document_Id_document_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "Document_Id_document_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Document_Id_document_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "Document_Id_document_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "Document_Id_document_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: Document; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Document" (
    "Id_document" integer DEFAULT nextval('"Document_Id_document_seq"'::regclass) NOT NULL,
    "Id_counteragent" integer,
    "Id_doc_type" integer,
    document_date date,
    "Id_sale" integer NOT NULL
);


ALTER TABLE "Document" OWNER TO wolterlw;

--
-- Name: Document_type_Id_doc_type_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "Document_type_Id_doc_type_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Document_type_Id_doc_type_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "Document_type_Id_doc_type_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "Document_type_Id_doc_type_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: Document_type; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Document_type" (
    "Id_doc_type" integer DEFAULT nextval('"Document_type_Id_doc_type_seq"'::regclass) NOT NULL,
    type_name character(15) NOT NULL
);


ALTER TABLE "Document_type" OWNER TO wolterlw;

--
-- Name: Place; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Place" (
    place_name character(15) NOT NULL,
    "Id_counteragent" integer NOT NULL
);


ALTER TABLE "Place" OWNER TO wolterlw;

--
-- Name: Product; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Product" (
    product_name character(15) NOT NULL,
    "Id_product" integer NOT NULL,
    "Id_prod_type" integer
);


ALTER TABLE "Product" OWNER TO wolterlw;

--
-- Name: ProductPrice_Id_product_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "ProductPrice_Id_product_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "ProductPrice_Id_product_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "ProductPrice_Id_product_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "ProductPrice_Id_product_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: ProductPrice; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "ProductPrice" (
    "Id_product" integer DEFAULT nextval('"ProductPrice_Id_product_seq"'::regclass) NOT NULL,
    "Id_document" integer,
    "Id_product_price" integer NOT NULL,
    price double precision,
    quantity integer
);


ALTER TABLE "ProductPrice" OWNER TO wolterlw;

--
-- Name: ProductType_Id_prod_type_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "ProductType_Id_prod_type_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "ProductType_Id_prod_type_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "ProductType_Id_prod_type_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "ProductType_Id_prod_type_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: ProductType; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "ProductType" (
    "Id_prod_type" integer DEFAULT nextval('"ProductType_Id_prod_type_seq"'::regclass) NOT NULL,
    type_name character(50)
);


ALTER TABLE "ProductType" OWNER TO wolterlw;

--
-- Name: Reciep_Id_reiep_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "Reciep_Id_reiep_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Reciep_Id_reiep_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "Reciep_Id_reiep_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "Reciep_Id_reiep_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: Reciep; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Reciep" (
    "Id_reiep" integer DEFAULT nextval('"Reciep_Id_reiep_seq"'::regclass) NOT NULL,
    "Reciep" character(50),
    "Id_prod_ready" integer,
    "Id_prod_ingred" integer
);


ALTER TABLE "Reciep" OWNER TO wolterlw;

--
-- Name: Sale_Id_sale_seq; Type: SEQUENCE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE SEQUENCE "Sale_Id_sale_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "Sale_Id_sale_seq" OWNER TO wolterlw;

--
-- Name: SEQUENCE "Sale_Id_sale_seq"; Type: COMMENT; Schema: HappyCake_main; Owner: wolterlw
--

COMMENT ON SEQUENCE "Sale_Id_sale_seq" IS 'DbWrench Autogenerated Sequence.';


--
-- Name: Sale; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE "Sale" (
    percentage integer NOT NULL,
    "Id_sale" integer DEFAULT nextval('"Sale_Id_sale_seq"'::regclass) NOT NULL
);


ALTER TABLE "Sale" OWNER TO wolterlw;

--
-- Name: maximum; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE maximum (
    currval bigint
);


ALTER TABLE maximum OWNER TO wolterlw;

--
-- Name: physical_face; Type: TABLE; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TABLE physical_face (
    "Id_counteragent" integer NOT NULL,
    surname character(50) NOT NULL,
    name character(50) NOT NULL,
    date_of_birth date NOT NULL,
    address text NOT NULL,
    telephone_number bigint
);


ALTER TABLE physical_face OWNER TO wolterlw;

--
-- Name: CorporateFace pkCorporateFace; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "CorporateFace"
    ADD CONSTRAINT "pkCorporateFace" PRIMARY KEY ("Id_counteragent");


--
-- Name: CounterAgents pkCounterAgents; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "CounterAgents"
    ADD CONSTRAINT "pkCounterAgents" PRIMARY KEY ("Id_counteragent");


--
-- Name: Document pkDocument; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Document"
    ADD CONSTRAINT "pkDocument" PRIMARY KEY ("Id_document");


--
-- Name: Document_type pkDocument_type; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Document_type"
    ADD CONSTRAINT "pkDocument_type" PRIMARY KEY ("Id_doc_type");


--
-- Name: Place pkPlace; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Place"
    ADD CONSTRAINT "pkPlace" PRIMARY KEY ("Id_counteragent");


--
-- Name: Product pkProduct; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Product"
    ADD CONSTRAINT "pkProduct" PRIMARY KEY ("Id_product");


--
-- Name: ProductPrice pkProductPrice; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "ProductPrice"
    ADD CONSTRAINT "pkProductPrice" PRIMARY KEY ("Id_product_price");


--
-- Name: ProductType pkProductType; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "ProductType"
    ADD CONSTRAINT "pkProductType" PRIMARY KEY ("Id_prod_type");


--
-- Name: Reciep pkReciep; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Reciep"
    ADD CONSTRAINT "pkReciep" PRIMARY KEY ("Id_reiep");


--
-- Name: Sale pkSale; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Sale"
    ADD CONSTRAINT "pkSale" PRIMARY KEY ("Id_sale");


--
-- Name: physical_face pkphysical_face; Type: CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY physical_face
    ADD CONSTRAINT pkphysical_face PRIMARY KEY ("Id_counteragent");


--
-- Name: identification_code; Type: INDEX; Schema: HappyCake_main; Owner: wolterlw
--

CREATE UNIQUE INDEX identification_code ON "CorporateFace" USING btree (identification_code);


--
-- Name: physical_face insert_physicalface; Type: TRIGGER; Schema: HappyCake_main; Owner: wolterlw
--

CREATE TRIGGER insert_physicalface BEFORE INSERT ON physical_face FOR EACH ROW EXECUTE PROCEDURE incrfunction();


--
-- Name: physical_face Id_counteragent; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY physical_face
    ADD CONSTRAINT "Id_counteragent" FOREIGN KEY ("Id_counteragent") REFERENCES "CounterAgents"("Id_counteragent");


--
-- Name: Document Id_doc_type; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Document"
    ADD CONSTRAINT "Id_doc_type" FOREIGN KEY ("Id_doc_type") REFERENCES "Document_type"("Id_doc_type");


--
-- Name: ProductPrice Id_document; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "ProductPrice"
    ADD CONSTRAINT "Id_document" FOREIGN KEY ("Id_document") REFERENCES "Document"("Id_document");


--
-- Name: Reciep Id_prod_ingred; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Reciep"
    ADD CONSTRAINT "Id_prod_ingred" FOREIGN KEY ("Id_prod_ingred") REFERENCES "Product"("Id_product");


--
-- Name: Reciep Id_prod_ready; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Reciep"
    ADD CONSTRAINT "Id_prod_ready" FOREIGN KEY ("Id_prod_ready") REFERENCES "Product"("Id_product");


--
-- Name: Product Id_prod_type; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Product"
    ADD CONSTRAINT "Id_prod_type" FOREIGN KEY ("Id_prod_type") REFERENCES "ProductType"("Id_prod_type");


--
-- Name: ProductPrice Id_product; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "ProductPrice"
    ADD CONSTRAINT "Id_product" FOREIGN KEY ("Id_product") REFERENCES "Product"("Id_product");


--
-- Name: Document fk_Document_Sale; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Document"
    ADD CONSTRAINT "fk_Document_Sale" FOREIGN KEY ("Id_sale") REFERENCES "Sale"("Id_sale");


--
-- Name: Place id_counteragent; Type: FK CONSTRAINT; Schema: HappyCake_main; Owner: wolterlw
--

ALTER TABLE ONLY "Place"
    ADD CONSTRAINT id_counteragent FOREIGN KEY ("Id_counteragent") REFERENCES "CounterAgents"("Id_counteragent");


--
-- PostgreSQL database dump complete
--

